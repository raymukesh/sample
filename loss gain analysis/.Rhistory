q()
install.packages("tidyverse")
install.packages("sf")
library("sf")
install.packages("mapview")
library(readxl)
detach("package:readxl", unload = TRUE)
library(readxl)
detach("package:readxl", unload = TRUE)
library(raster)
detach("package:raster", unload = TRUE)
library(readr)
detach("package:readr", unload = TRUE)
gc()
install.packages("learnr")
install.packages("osmdata")
install.packages("sfnetworks")
install.packages("tidygraph")
install.packages("sf")
library(osmdata)
library(sfnetworks)
library(tidygraph)
library(sf)
library(tidyverse)
bus <- opq("Quito, Ecuador") %>%
add_osm_feature(key = "route", value = c("bus", "subway", "trolleybus")) %>%
osmdata_sf() %>% unique_osmdata()
thresholds = seq(3600, 600, -600)
thresholds
bus <- bus %>% unname_osmdata_sf()
buslines = bind_rows(
bus$osm_lines,
st_cast(bus$osm_multilines, "LINESTRING")
) %>%
select(name)
bussfn = as_sfnetwork(buslines, directed = FALSE)
center = c(-78.51436,-0.22308) %>%
st_point() %>%
st_sfc(crs = 4326)
sfn = bussfn %>%
activate("edges") %>%
mutate(weight = edge_length()) %>%
mutate(speed = units::set_units(11, "m/s")) %>%
mutate(time = weight / speed) %>%
activate("nodes") %>%
filter(group_components() == 1)
# Define the threshold values (in meters).
# Define also the colors to plot the neighborhoods in.
thresholds = seq(3600, 600, -600)
nbh = sfn %>%
activate("edges") %>%
mutate(neigh = units::set_units(NA, 'min')) %>%
activate("nodes") %>%
mutate(neigh = units::set_units(NA, 'min'))
for (i in c(1:length(thresholds))) {
nbh = nbh %>%
activate('edges') %>%
morph(to_spatial_neighborhood, center, thresholds[i],
weights = 'time') %>%
mutate(neigh = units::as_units(thresholds[i]/60, 'min')) %>%
activate("nodes") %>%
mutate(neigh = units::as_units(thresholds[i]/60, 'min')) %>%
unmorph()
}
ggplot() +
geom_sf(
data = st_as_sf(nbh, 'edges'),
aes(
color = as.numeric(neigh)
)
) +
scale_color_distiller(
"Travel time (min)",
palette = "Greys",
guide = guide_colorbar(
title.position = "top",
barheight = grid::unit(3, 'mm'),
ticks = F
)
) +
labs(
title = "\nQuito public\ntransport network",
caption = "#30DayMapChallenge | Day 10: Monochrome\nData: © OpenStreetMap contributors | Created by @loreabad6\n"
) +
theme_void() +
theme(
text = element_text(family = "Futura LT"),
plot.title = element_text(
hjust = 0.5, size = 16
),
plot.caption = element_text(
hjust = 0.5, size = 7
),
legend.position = "bottom",
legend.direction = "horizontal",
plot.background = element_rect(color = "black", fill = "white", size = 5)
)
ggplot() +
geom_sf(
data = st_as_sf(nbh, 'edges'),
aes(
color = as.numeric(neigh)
)
) +
scale_color_distiller(
"Travel time (min)",
palette = "Greys",
guide = guide_colorbar(
title.position = "top",
barheight = grid::unit(3, 'mm'),
ticks = F
)
) +
labs(
title = "\nQuito public\ntransport network",
caption = "#30DayMapChallenge | Day 10: Monochrome\nData: © OpenStreetMap contributors | Created by @loreabad6\n"
) +
theme_void() +
theme(
text = element_text(family = "Futura LT"),
plot.title = element_text(
hjust = 0.5, size = 16
),
plot.caption = element_text(
hjust = 0.5, size = 7
),
legend.position = "bottom",
legend.direction = "horizontal",
plot.background = element_rect(color = "black", fill = "yellow", size = 5)
)
ggplot() +
geom_sf(
data = st_as_sf(nbh, 'edges'),
aes(
color = as.numeric(neigh)
)
) +
scale_color_distiller(
"Travel time (min)",
palette = "Greys",
guide = guide_colorbar(
title.position = "top",
barheight = grid::unit(3, 'mm'),
ticks = F
)
) +
labs(
title = "\nQuito public\ntransport network",
caption = "#30DayMapChallenge | Day 10: Monochrome\nData: © OpenStreetMap contributors | Created by @loreabad6\n"
) +
theme_void() +
theme(
text = element_text(family = "Futura LT"),
plot.title = element_text(
hjust = 0.5, size = 16
),
plot.caption = element_text(
hjust = 0.5, size = 7
),
legend.position = "bottom",
legend.direction = "horizontal",
plot.background = element_rect(color = "black", fill = "yellow", size = 1)
)
getbb("Copenhagen")
getbb("Delhi")
call <- opq(bbox = "Delhi")
call <- add_osm_feature(call, key = "highway",value=c("motorway",
"primary","secondary"))
mydata <- osmdata_sf(call)
View(call)
View(call)
install.packages("ggmap")
library(ggmap)
mad_map <- get_map(getbb("Delhi"), maptype = "roadmap",source="osm",color="bw")
ggmap(mad_map)+
geom_sf(data = mydata$osm_lines,
inherit.aes = FALSE)
i = 0
i = i+1
for i in range(100) {
i = i+1
}
for i in range(100)
i = i + 1
for (i in range(10))
for (i in range(10))
i = i + 1
print(i = i + 1)
for (i in range(10))
print(i = i + 1)
for (i in 1:10)
print(i = i + 1)
i = 0
for (i in 1:10)
for (i in 1:10)
print(i = i + 1)
print(i)
for (i in 1:10)
print(i)
for (i in 1:10)
i = i + 1
print(i)
i = 0
for (i in 1:10)
print(i)
i = i + 1
for (i in 1:10)
print(i)
i = i + 1
for (i in 1:10)
print(i)
i = i + 1
for (i in 1:10)
print(i)
install.packages("terra", dependencies = TRUE)
r <- rast(ncol=10, nrow=10, xmin=-150, xmax=-80, ymin=20, ymax=60)
library(terra)
install.packages("terra")
install.packages("terra")
library(terra)
version
install.packages("installr")
gc()
install.packages("gpuR")
setwd("C:/Users/Dell/Desktop/loss gain analysis")
library(raster)
library(sf)
library(tidyverse)
library(reshape2)
library(ggthemes)
library(tmap)
library(mapview)
library(ggspatial)
library(terra)
library(ggrepel)
##Load the district shapefiles
site <- st_read("all_districts/all_districts_site_43N.shp")
## Load the raster data set - built up raster for all the years
raw_ras <- list.files("raster/", pattern = "*.tif", full.names = TRUE)
## Stack the rasters
raw_stack <- raster::stack(raw_ras[[1]])
raw_stack
## Stack the rasters
lc_90 <- raster::stack(raw_ras[[1]])
rm(raw_ras)
## Check if the projection of site and
st_crs(raw_stack) == st_crs(site)
lc_90_ras <- rasterize(site, lc_90)
lc_90_ras <- raster::rasterize(site, lc_90)
## Stack the rasters
lc_90 <- raster(raw_ras[[1]])
## Stack the rasters
lc_90 <- raster("raster/final_1990_v4.tif")
lc_90_ras <- raster::rasterize(site, lc_90)
plot(lc_90)
lc_90_ras
View(site)
##Load the district shapefiles
site <- st_read("all_districts/all_districts_site_43N.shp") %>% select(dt_cen_cd)
site
lc_90_ras <- raster::rasterize(site, lc_90)
plot(lc_90_ras)
View(lc_90_ras)
crosstab(lc_90_ras, lc_90)
crosstab(lc_90_ras, lc_90)*((60*601e6))
crosstab(lc_90_ras, lc_90)*((60*60)/1e6)
lc_90_df  <-  data.frame(crosstab(lc_90_ras, lc_90)*((60*60)/1e6)
lc_90_df  <-  data.frame(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))
lc_90_df <-  data.frame(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))
View(lc_90_df)
lc_90_df <-  data.frame(as.matrix(crosstab(lc_90_ras, lc_90)*((60*60)/1e6)))
View(lc_90_df)
lc_90_df <-  as.data.frame(as.matrix(crosstab(lc_90_ras, lc_90)*((60*60)/1e6)))
View(lc_90_df)
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6)))
View(lc_90_df)
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq")
##Load the district shapefiles
site <- st_read("all_districts/all_districts_site_43N.shp")
site_new <- site %>% left_join(lc_90_df)
site_new <- site %>% left_join(lc_90_df, by = "ID")
site_new <- site %>% left_join(lc_90_df, by = "layer")
site_new <- site %>% left_join(lc_90_df, by = c("layer"))
##Load the district shapefiles
site <- st_read("all_districts/all_districts_site_43N.shp") %>% rowid_to_column("ID")
site_new <- site %>% left_join(lc_90_df, by = c("layer", "ID"))
site_new <- site %>% left_join(.,lc_90_df, by = c("layer", "ID"))
lc_90_df
site_new <- site %>% left_join(lc_90_df, by = c("layer"= "ID"))
site_new <- site %>% left_join(lc_90_df, by = c("ID"= "layer"))
lc_90_df
site
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% as_tibble()
lc_90_df
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer))
lc_90_df
site_new <- site %>% left_join(lc_90_df, by = c("ID"= "layer"))
View(site_new)
ggplot() +
geom_sf(data = site_new,  fill = 3, lwd = 0.5)
ggplot() +
geom_sf(data = site_new,  fill = "3", lwd = 0.5)
ggplot() +
geom_sf(data = site_new,  aes(fill = 3), lwd = 0.5)
ggplot() +
geom_sf(data = site_new,  aes(fill = "3"), lwd = 0.5)
View(site_new)
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer)) %>%
rename(1 = "water", 2 = "Veg", 3 = "built", 4 = "crop", 5 = "barren")
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer)) %>%
rename("1" = "water", "2" = "Veg", "3" = "built", "4" = "crop", "5" = "barren")
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer)) %>%
rename("1" = "water", "2" = "Veg", "3" = "built", "4" = "crop", "5" = "barren")
colnames(lc_90_df)
colnames(site_new)
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer)) %>%
rename("1" = "water", "2" = "Veg", "3" = "built", "4" = "crop", "5" = "barren")
lc_90_df <-  as.data.frame(as.table(crosstab(lc_90_ras, lc_90)*((60*60)/1e6))) %>%
pivot_wider(names_from = "final_1990_v4", values_from = "Freq") %>% mutate(layer = as.integer(layer)) %>%
rename("water" = "1", "veg" = "2", "built" = "3", "crop" = "4", "barren" = "5")
site_new <- site %>% left_join(lc_90_df, by = c("ID"= "layer"))
colnames(site_new)
ggplot() +
geom_sf(data = site_new,  aes(fill = built), lwd = 0.5)
site_new <- site %>% left_join(lc_90_df, by = c("ID"= "layer")) %>% mutate(built_per = built/dt_area_km*100)
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5)
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_viridis_c()
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_continuous()
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_continuous(type = "virdis")
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_continuous(type = "viridis")
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_manual(values = hcl.colors(10, palette = "BrRd"))
hcl.pals("divergingx")
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_manual(values = hcl.colors(10, palette = "RdYlBu"))
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_manual_n(values = hcl.colors(10, palette = "RdYlBu"))
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_continuous(values = hcl.colors(10, palette = "RdYlBu"))
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_continuous(colors = hcl.colors(10, palette = "RdYlBu"))
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_distiller(palette = "YlOrBr")
ggplot() +
geom_sf(data = site_new,  aes(fill = built_per), lwd = 0.5) +
scale_fill_gradientn(colors = hcl.colors(10, palette = "RdYlBu"))
